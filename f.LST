C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE F
OBJECT MODULE PLACED IN f.OBJ
COMPILER INVOKED BY: D:\keil 开发软件\C51\BIN\C51.EXE f.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          sbit PWM1 = P1^0;//左轮电机驱动使能
   3          sbit PWM2 = P1^5;//右轮电机驱动使能
   4          sbit motor_control_1 = P1^1;//左轮前进
   5          sbit motor_control_2 = P1^2;//左轮后退
   6          sbit motor_control_3 = P1^3;//右轮前进
   7          sbit motor_control_4 = P1^4;//右轮后退
   8          
   9          #define Imax 14000
  10          #define Imin 8000
  11          #define Inum1 1450
  12          #define Inum2 700
  13          #define Inum3 3000
  14          unsigned char f=0;
  15          unsigned char Im[4]={0x00,0x00,0x00,0x00} ;
  16          unsigned char show[2]={0,0}      ;
  17          unsigned long Tc , m;
  18          unsigned char IrOK;
  19          unsigned char ucLock = 0;//互斥量，俗称原子锁
  20          
  21          
  22          
  23          unsigned int uiPWMCnt1 = 0;      //速度计数位
  24          unsigned int uiPWM1 = 225;        //默认速度值
  25          unsigned int uiPWMCnt2 = 0;
  26          unsigned int uiPWM2 = 225;
  27          
  28          unsigned char ucTempPWM=225;//设置中间变量
  29          
  30          
  31          
  32          void initial_myself();
  33          void initial_peripheral();
  34          void T0_time();
  35          void usart_service(void);
  36          void delay_long(unsigned int uiDelayLong);
  37          void go_forward(void);//前进
  38          void fall_back(void);//后退
  39          void turn_left(void);//左转
  40          void turn_right(void);//右转
  41          void stop();//刹车
  42          //延时函数
  43          void delay(unsigned int k);
  44          
  45          //外部中断解码程序
  46          void intersvr0(void) interrupt 1  using 1
  47          {
  48   1              Tc= TH0*256+TL0;
  49   1              TH0=0;
  50   1              TL0=0;
  51   1              if(Tc>Imin&&Tc<Imax)
  52   1              {
  53   2                      m=0;
  54   2                      f=1;
  55   2                      return; 
C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 2   

  56   2              }
  57   1                if(f==1)
  58   1                {
  59   2                        if(Tc>Inum1&&Tc<Inum3)
  60   2                        {
  61   3                                 Im[m/8] =Im[m/8]>>1|0x80;
  62   3                                 m++;           
  63   3                        }
  64   2                       if(Tc>Inum2&&Tc<Inum1)
  65   2                       {
  66   3                         Im[m/8] =Im[m/8]>>1;
  67   3                               m++;   
  68   3                       }
  69   2                      if(m==32)
  70   2                      {
  71   3                               m=0;
  72   3                               f=0;
  73   3                               if(Im[2]==~Im[3])
  74   3                               {
  75   4                                       IrOK=1;
  76   4                               }       else   IrOK=0;         
  77   3                      }
  78   2                }
  79   1      }
  80          
  81          
  82          
  83          
  84          void main()
  85          {                       
  86   1              initial_myself();
  87   1              delay_long(100);
  88   1              initial_peripheral();
  89   1              while(1)
  90   1              {                                       
  91   2                        if(IrOK==1)
  92   2                    {
  93   3                         usart_service();        
  94   3                         IrOK=0;         
  95   3                    }                                    
  96   2              }
  97   1      }
  98          
  99          //串口服务函数
 100          void usart_service()
 101          {                                       
 102   1      
 103   1                      switch(Im[2])
 104   1                      {         
 105   2                            case 0x18:  //前进
 106   2                                      Im[2] = 0x02;//避免一直触发
 107   2                                                                      
 108   2                                      go_forward();
 109   2                                      ucLock = 1;
 110   2                                      uiPWM1 = uiPWM2 = ucTempPWM;
 111   2                                      ucLock = 0;
 112   2                                      break;
 113   2                          case  0x08  : //左转
 114   2                                  Im[2] = 0x02;//避免一直触发
 115   2                                                              
 116   2                                      turn_left();
 117   2                                      ucLock = 1;
C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 3   

 118   2                                      uiPWM2 = ucTempPWM /4 *3;
 119   2                                      uiPWM1 = ucTempPWM;
 120   2                                      ucLock = 0;
 121   2                                      break;
 122   2                          case 0x5A: //右转
 123   2                                      Im[2] = 0x02;//避免一直触发
 124   2                                      turn_right();
 125   2                                      ucLock = 1;
 126   2                                      uiPWM2 = ucTempPWM;
 127   2                                      uiPWM1 = ucTempPWM /4 *3;
 128   2                                      ucLock = 0;
 129   2                                      break;
 130   2                           case 0x52 : //后退
 131   2                                      Im[2] = 0x02;//避免一直触发
 132   2                                      fall_back();
 133   2                                      ucLock = 1;
 134   2                                      uiPWM1 = uiPWM2 =ucTempPWM;
 135   2                                      ucLock = 0;
 136   2                                      break;
 137   2                           case 0x1C :   //停止
 138   2                                      Im[2] = 0x02;//避免一直触发
 139   2                                      stop();        
 140   2                                      ucLock = 1;
 141   2                                      uiPWM1 = uiPWM2 = ucTempPWM;
 142   2                                      ucLock = 0;
 143   2                                      break;                                                         
 144   2                              default : 
 145   2                                      break;
 146   2              
 147   2                      }
 148   1                      delay_long(100);
 149   1                      //速度调节的数据
 150   1                      if(Im[2]!=0x18&&Im[2]!=0x08 && Im[2]!=0x5A &&  Im[2]!=0x52 && Im[2]!=0x1C&& Im[2]!=0x43&& 
             -Im[2]!=0x44&& Im[2]!=0x45&& Im[2]!=0x46&& Im[2]!=0x47&& Im[2]!=0x40)
 151   1                      {
 152   2                              ucLock = 1;
 153   2                                                              switch(Im[2])    {                                                      
 154   3                                                                      case 0x16: ucTempPWM = uiPWM1 = uiPWM2 =165;
 155   3                                                                      break;
 156   3                                                                      case 0x19: ucTempPWM = uiPWM1 = uiPWM2 =205;
 157   3                                                                      break;
 158   3                                                                      case 0x0D: ucTempPWM = uiPWM1 = uiPWM2 =255;
 159   3                                                                      break;
 160   3                                                                       default : 
 161   3                                      break;
 162   3                                                              }
 163   2      
 164   2                              
 165   2                              ucLock = 0;
 166   2                      }
 167   1      
 168   1      }
 169          
 170          void initial_myself()
 171          {
 172   1      
 173   1              TMOD = 0x11;//设置定时器0为工作方式1
 174   1                  TH0=0;
 175   1                  TL0=0;
 176   1                      TH1 = 0xff;
 177   1              TL1 = 0x28; 
 178   1              TH0 = TL0 = 0xfd;     
C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 4   

 179   1              stop();
 180   1                      PWM1 = 1;
 181   1              PWM2 = 1;                                
 182   1       
 183   1      
 184   1      }
 185          
 186          void initial_peripheral()
 187          {
 188   1      
 189   1      
 190   1              m=0;
 191   1              f=0;
 192   1              IT0=1;
 193   1              EX0=1;
 194   1              
 195   1            
 196   1              EA = 1;//开总中断
 197   1              ES = 1;//允许串口中断
 198   1              ET0 = 1;//允许定时器中断
 199   1              TR0 = 1;//启动定时器  
 200   1                      ET1 = 1;//允许定时器中断
 201   1              TR1 = 1;//启动定时器    
 202   1      }
 203          
 204          void T0_time() interrupt 3
 205          {
 206   1              TF1 = 0;//清除中断标志
 207   1              TR1 = 0;//关定时器
 208   1              uiPWMCnt1 ++;
 209   1              uiPWMCnt2 ++;
 210   1      
 211   1              if(ucLock == 0)
 212   1              {
 213   2                      if(uiPWMCnt1 > 255)
 214   2                      {
 215   3                              uiPWMCnt1 = 0;
 216   3                      }
 217   2                      if(uiPWMCnt1 < uiPWM1)
 218   2                      {
 219   3                              PWM1 = 1;
 220   3                              
 221   3                      }
 222   2                      else
 223   2                      {
 224   3                              PWM1 = 0;
 225   3                      }
 226   2              
 227   2                      if(uiPWMCnt2 > 255)
 228   2                      {
 229   3                              uiPWMCnt2 = 0;
 230   3                      }
 231   2                      if(uiPWMCnt2 < uiPWM2)
 232   2                      {
 233   3                              PWM2 = 1;
 234   3                              
 235   3                      }
 236   2                      else
 237   2                      {
 238   3                              PWM2 = 0;
 239   3                      }
 240   2                                                 
C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 5   

 241   2              
 242   2              }
 243   1      
 244   1              TH1 = 0xff;
 245   1              TL1 = 0x28;
 246   1              TR1 = 1;///开定时器
 247   1      
 248   1      }
 249          
 250          void delay(unsigned int k)
 251          {
 252   1         unsigned int x,y;
 253   1           for(x=0;x<k;x++)
 254   1                      for(y=0;y<2000;y++);
 255   1      }
 256          void delay_long(unsigned int uiDelayLong)
 257          {
 258   1              unsigned int i;
 259   1              unsigned int j;
 260   1              for(i = 0 ; i < uiDelayLong ; i++)
 261   1              {
 262   2                      for(j = 0; j < 500; j++);
 263   2              
 264   2              }
 265   1      
 266   1      }
 267          void stop()//停止
 268          {
 269   1              
 270   1              motor_control_1 = 0;
 271   1              motor_control_2 = 0;
 272   1              motor_control_3 = 0;
 273   1              motor_control_4 = 0;
 274   1      }
 275          void fall_back()
 276          {
 277   1             
 278   1              motor_control_1 = 0;
 279   1              motor_control_2 = 1;
 280   1              motor_control_3 = 0;
 281   1              motor_control_4 = 1;
 282   1      }
 283          void go_forward()
 284          {
 285   1              
 286   1              motor_control_1 = 1;
 287   1              motor_control_2 = 0;
 288   1              motor_control_3 = 1;
 289   1              motor_control_4 = 0;
 290   1      }
 291          void turn_left()//左转
 292          {
 293   1             
 294   1              motor_control_1 = 0;
 295   1              motor_control_2 = 0;
 296   1              motor_control_3 = 1;
 297   1              motor_control_4 = 0;
 298   1              
 299   1      }
 300          void turn_right()//右转
 301          {
 302   1             
C51 COMPILER V9.01   F                                                                     06/30/2016 19:29:48 PAGE 6   

 303   1              motor_control_1 = 1;
 304   1              motor_control_2 = 0;
 305   1              motor_control_3 = 0;
 306   1              motor_control_4 = 0;
 307   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    918    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
